{"version":3,"sources":["PatientDetails.js","Buttons.js","SideBar.js","NurseContent.js","DoctorContent.js","AlertDialog.js","SettingsDialog.js","App.js","serviceWorker.js","index.js"],"names":["PatientDetails","_ref","patientData","view","seeingPatient","react_default","a","createElement","className","name","gender","age","Buttons","switchPage","toggleAlertDialog","toggleSettingsPage","Fragment","next","icon","label","onClick","SideBar","list","list_item","activated","NurseContent","vitals","setVitals","typography_next","use","height","slider_next","value","onChange","evt","Object","objectSpread","detail","onInput","discrete","step","min","max","weight","toFixed","textfield_next","outlined","heartRate","DoctorContent","textarea","AlertDialog","showAlertDialog","closeDialog","dialog_next","title","body","open","onClose","SettingsBody","alertLevels","setAlertLevels","select_next","bestPractices","options","target","bleedingRisk","diabetesRisk","SettingsDialog","_ref2","showSettingsPage","SettingsDialog_SettingsBody","App","state","dob","allergies","bloodPressure","generalObservations","_this","setState","fetchRisk","_callee","parameters","response","regenerator_default","wrap","_context","prev","console","log","fetch","mode","sent","abrupt","text","stop","seePatient","_callee2","originally_seeing_patient","probability","_context2","_this2","this","_this$state","href","rel","classnames","src_PatientDetails","src_Buttons","src_SideBar","src_NurseContent","src_DoctorContent","src_AlertDialog","src_SettingsDialog","newAlertLevels","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAWeA,SATQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,KAAMC,EAAtBH,EAAsBG,cAAtB,MACV,UAATD,GAA8B,WAATA,GAAqBC,EAAiBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACtEH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,mBAAcL,EAAYO,MAChCJ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,qBAAgBL,EAAYQ,QAClCL,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,kBAAaL,EAAYS,KAC/BN,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,wBAAN,oBAEKF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BCQbI,SAbC,SAAAX,GAAA,IAAGE,EAAHF,EAAGE,KAAMU,EAATZ,EAASY,WAAYC,EAArBb,EAAqBa,kBAAmBC,EAAxCd,EAAwCc,mBAAxC,OAAiEV,EAAAC,EAAAC,cAAA,WACnE,UAATJ,EACGE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYC,KAAK,OAAOC,MAAM,cAAcC,QAASP,KAEzDR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYC,KAAK,aAAaC,MAAM,WAAWC,QAASN,IACxDT,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYC,KAAK,WAAWC,MAAM,WAAWC,QAASL,IACtDV,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYC,KAAK,SAASC,MAAM,cAAcC,QAASP,gCCepDQ,EApBC,SAAApB,GAAA,IAAGE,EAAHF,EAAGE,KAAH,OAAcE,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMd,UAAU,WAAoB,UAATL,EACrDE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,uBACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAUC,WAAS,GAAnB,oBAGJnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KAAEX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAUC,WAAS,GAAnB,sBACEnB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,wBAGJlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,uBACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,oBACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,+BACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,yBACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,yBACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,6BACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,qBACAlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,gHCyCWE,EAtDM,SAAAxB,GAAA,IAAGyB,EAAHzB,EAAGyB,OAAQC,EAAX1B,EAAW0B,UAAX,OAA2BtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAE3DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,IAAI,aAAhB,WAAqCH,EAAOI,OAA5C,MACAzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,MAAyB,OAAlBN,EAAOI,OAAkB,IAAMJ,EAAOI,OAC7CG,SAAU,SAAAC,GAAG,OAAIP,EAAUQ,OAAAC,EAAA,EAAAD,CAAA,GAAKT,EAAN,CAAcI,OAAQI,EAAIG,OAAOL,UAC3DM,QAAS,SAAAJ,GAAG,OAAIP,EAAUQ,OAAAC,EAAA,EAAAD,CAAA,GAAKT,EAAN,CAAcI,OAAQI,EAAIG,OAAOL,UAC1DO,UAAQ,EACRC,KAAM,EACNC,IAAK,GACLC,IAAK,OAGbrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEfH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,IAAI,aAAhB,WAAqCH,EAAOiB,OAA5C,MACAtC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,MAAyB,OAAlBN,EAAOiB,OAAkB,GAAKjB,EAAOiB,OAC5CV,SAAU,SAAAC,GAAG,OAAIP,EAAUQ,OAAAC,EAAA,EAAAD,CAAA,GAAKT,EAAN,CAAciB,OAAQT,EAAIG,OAAOL,MAAMY,QAAQ,OACzEN,QAAS,SAAAJ,GAAG,OAAIP,EAAUQ,OAAAC,EAAA,EAAAD,CAAA,GAAKT,EAAN,CAAciB,OAAQT,EAAIG,OAAOL,MAAMY,QAAQ,OACxEL,UAAQ,EACRC,KAAM,GACNC,IAAK,EACLC,IAAK,OAGbrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,IAAI,aAAhB,kBACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWC,UAAQ,EAAC3B,MAAM,aAC1Bd,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWC,UAAQ,EAAC3B,MAAM,gBAGlCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,IAAI,aAAhB,eAAyCH,EAAOqB,UAAhD,OACA1C,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,MAA4B,OAArBN,EAAOqB,UAAqB,GAAKrB,EAAOqB,UAC/Cd,SAAU,SAAAC,GAAG,OAAIP,EAAUQ,OAAAC,EAAA,EAAAD,CAAA,GAAKT,EAAN,CAAcqB,UAAWb,EAAIG,OAAOL,UAC9DM,QAAS,SAAAJ,GAAG,OAAIP,EAAUQ,OAAAC,EAAA,EAAAD,CAAA,GAAKT,EAAN,CAAcqB,UAAWb,EAAIG,OAAOL,UAC7DO,UAAQ,EACRC,KAAM,EACNC,IAAK,GACLC,IAAK,UCzBNM,EAtBO,SAAA/C,KAAGyB,OAAH,OAAgBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEjDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,IAAI,aAAhB,mBACAxB,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWC,UAAQ,EAACG,UAAQ,EAAC9B,MAAM,qBAEvCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,IAAI,aAAhB,aACAxB,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWC,UAAQ,EAACG,UAAQ,EAAC9B,MAAM,eAEvCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,IAAI,aAAhB,eACAxB,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWC,UAAQ,EAACG,UAAQ,EAAC9B,MAAM,4BCThC+B,eAZK,SAAAjD,GAAA,IAAGkD,EAAHlD,EAAGkD,gBAAiBC,EAApBnD,EAAoBmD,YAApB,OAAsC/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACtDC,MAAM,iBACNC,KAAMlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,qFACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,8CAEJiD,KAAML,EACNM,QAASL,cCHPM,SAAe,SAAAzD,GAAA,IAAG0D,EAAH1D,EAAG0D,YAAaC,EAAhB3D,EAAgB2D,eAAhB,OAAqCvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACrEH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACI1C,MAAM,GACNa,MAAO2B,EAAYG,cACnBC,QAAS,CAAC,OAAQ,SAAU,MAAO,QACnC9B,SAAU,SAAAC,GAAG,OAAI0B,EAAezB,OAAAC,EAAA,EAAAD,CAAA,GAAKwB,EAAN,CAAmBG,cAAe5B,EAAI8B,OAAOhC,YAEhF3B,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACI1C,MAAM,GACNa,MAAO2B,EAAYM,aACnBF,QAAS,CAAC,OAAQ,SAAU,MAAO,QACnC9B,SAAU,SAAAC,GAAG,OAAI0B,EAAezB,OAAAC,EAAA,EAAAD,CAAA,GAAKwB,EAAN,CAAmBM,aAAc/B,EAAI8B,OAAOhC,YAG/E3B,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACI1C,MAAM,GACNa,MAAO2B,EAAYO,aACnBH,QAAS,CAAC,OAAQ,SAAU,MAAO,QACnC9B,SAAU,SAAAC,GAAG,OAAI0B,EAAezB,OAAAC,EAAA,EAAAD,CAAA,GAAKwB,EAAN,CAAmBO,aAAchC,EAAI8B,OAAOhC,eAWpEmC,EAPQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,iBAAkBjB,EAArBgB,EAAqBhB,YAAaO,EAAlCS,EAAkCT,YAAaC,EAA/CQ,EAA+CR,eAA/C,OAAoEvD,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACvFC,MAAM,iBACNC,KAAMlD,EAAAC,EAAAC,cAAC+D,EAAD,CAAcX,YAAaA,EAAaC,eAAgBA,IAC9DJ,KAAMa,EACNZ,QAASL,KC+FEmB,6MA3HbC,MAAQ,CACNrE,KAAM,QACNkE,kBAAkB,EAClBjE,eAAe,EACf+C,iBAAiB,EACjBQ,YAAa,CACXG,cAAe,MACfG,aAAc,SACdC,aAAc,QAEhBhE,YAAa,CACXO,KAAM,cACNC,OAAQ,OACR+D,IAAK,YACL9D,IAAK,GACL+D,UAAW,CAAC,OAAQ,SAEtBhD,OAAQ,CACNiB,OAAQ,KACRb,OAAQ,KACR6C,cAAe,GACf5B,UAAW,KACX6B,oBAAqB,SAIzBjD,UAAY,SAACD,GACXmD,EAAKC,SAAS,CAAEpD,cAGlBb,WAAa,WACXgE,EAAKC,SAAS,CACZ3E,KAAyB,SAAnB0E,EAAKL,MAAMrE,KAAkB,SAAW,aAIlDY,mBAAqB,WACnB8D,EAAKC,SAAS,CACZT,kBAAkBQ,EAAKL,MAAMH,sBAIjCU,+BAAY,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAA7E,EAAA8E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAApE,MAAA,cAEJgE,EAAa,CACjBtE,IAAKkE,EAAKL,MAAMtE,YAAYS,IAC5BgC,OAAQkC,EAAKL,MAAM9C,OAAOiB,OAC1Bb,OAAQ+C,EAAKL,MAAM9C,OAAOI,QAG5ByD,QAAQC,IAAI,4CAAmDP,EAAWtE,IAAM,WAAasE,EAAWnD,OAAS,IAAM,WAAamD,EAAWtC,QARrI0C,EAAApE,KAAA,EAUawE,MACrB,4CAAmDR,EAAWtE,IAAM,WAAasE,EAAWnD,OAAS,IAAM,WAAamD,EAAWtC,OACnI,CACE+C,KAAM,SAbA,cAUJR,EAVIG,EAAAM,KAAAN,EAAAO,OAAA,SAgBHV,EAASW,QAhBN,wBAAAR,EAAAS,SAAAd,QAmBZe,gCAAa,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAf,EAAA7E,EAAA8E,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAlF,MAAA,UACLgF,EAA4BpB,EAAKL,MAAMpE,cAC7CyE,EAAKC,SAAS,CACZ1E,eAAeyE,EAAKL,MAAMpE,iBAExB6F,EALO,CAAAE,EAAAlF,KAAA,eAAAkF,EAAAP,OAAA,wBAAAO,EAAAlF,KAAA,EAOe4D,EAAKE,YAPpB,QAOLmB,EAPKC,EAAAR,MASO,KAA+C,QAAvCd,EAAKL,MAAMb,YAAYO,aAC/CW,EAAKC,SAAS,CAAE3B,iBAAiB,IAE1B+C,EAAc,KAA+C,UAAvCrB,EAAKL,MAAMb,YAAYO,aACpDW,EAAKC,SAAS,CAAE3B,iBAAiB,IAE1B+C,EAAc,IAA8C,OAAvCrB,EAAKL,MAAMb,YAAYO,cACnDW,EAAKC,SAAS,CAAE3B,iBAAiB,IAhBxB,wBAAAgD,EAAAL,SAAAE,8EAoBJ,IAAAI,EAAAC,KAAAC,EAOMD,KAAK7B,MANVrE,EADDmG,EACCnG,KACNkE,EAFKiC,EAELjC,iBACAlB,EAHKmD,EAGLnD,gBACAQ,EAJK2C,EAIL3C,YACAvD,EALKkG,EAKLlG,cACAF,EANKoG,EAMLpG,YACAwB,EAPK4E,EAOL5E,OAEF,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMgG,KAAK,0DAA0DC,IAAI,eACzEnG,EAAAC,EAAAC,cAAA,OAAKC,UAAWiG,IAAW,UAAWtG,IACpCE,EAAAC,EAAAC,cAACmG,EAAD,CAAgBxG,YAAaA,EAAaC,KAAMA,EAAMC,cAAeA,IACrEC,EAAAC,EAAAC,cAACoG,EAAD,CAASxG,KAAMA,EAAMU,WAAYwF,KAAKxF,WACpCE,mBAAoBsF,KAAKtF,mBACzBD,kBAAmBuF,KAAKN,cAE5B1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACqG,EAAD,CAASzG,KAAMA,KAEjBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACH,UAATL,EACCE,EAAAC,EAAAC,cAACsG,EAAD,CAAcnF,OAAQA,EAAQC,UAAW0E,KAAK1E,YAC9CvB,EAAgBC,EAAAC,EAAAC,cAACuG,EAAD,CAAepF,OAAQA,IAAa,OAI1DrB,EAAAC,EAAAC,cAACwG,EAAD,CACE5D,gBAAiBA,EACjBC,YAAa,SAAAlB,GAASkE,EAAKtB,SAAS,CAAE3B,iBAAiB,OACzD9C,EAAAC,EAAAC,cAACyG,EAAD,CACE3C,iBAAkBA,EAClBV,YAAaA,EACbC,eAAgB,SAAAqD,GAAoBb,EAAKtB,SAAS,CAAEnB,YAAasD,KACjE7D,YAAa,SAAAlB,GAASkE,EAAKtB,SAAS,CAAET,kBAAkB,eAvHhD6C,aCCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpH,EAAAC,EAAAC,cAACmH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.42140d2c.chunk.js","sourcesContent":["import React from \"react\"\n\nconst PatientDetails = ({ patientData, view, seeingPatient }) => (\n    view === \"nurse\" || (view === \"doctor\" && seeingPatient) ? <div className=\"PatientDetails\">\n        <span><b>Name: </b>{patientData.name}</span>\n        <span><b>Gender: </b>{patientData.gender}</span>\n        <span><b>Age: </b>{patientData.age}</span>\n        <span><b>Allergies: </b> G6PD, nuts... </span>\n\n    </div> : <div className=\"PatientDetails\" />)\n\nexport default PatientDetails","import React from \"react\"\nimport { IconButton } from '@rmwc/icon-button';\nimport '@material/icon-button/dist/mdc.icon-button.css';\n\nconst Buttons = ({ view, switchPage, toggleAlertDialog, toggleSettingsPage }) => <div>\n    {view === \"nurse\" ?\n        <>\n            <IconButton icon=\"face\" label=\"Switch view\" onClick={switchPage} />\n        </> :\n        <>\n            <IconButton icon=\"play_arrow\" label=\"Settings\" onClick={toggleAlertDialog} />\n            <IconButton icon=\"settings\" label=\"Settings\" onClick={toggleSettingsPage} />\n            <IconButton icon=\"person\" label=\"Switch view\" onClick={switchPage} />\n        </>\n    }\n</div>\n\nexport default Buttons","import React from \"react\"\nimport '@material/list/dist/mdc.list.css';\nimport {\n    List,\n    ListItem\n} from '@rmwc/list';\n\nconst SideBar = ({ view }) => <List className=\"sidebar\">{view === \"nurse\" ?\n    <>\n        <ListItem> Demographics </ListItem>\n        <ListItem activated> Record vitals </ListItem>\n    </>\n    :\n    <><ListItem activated> Patient overview </ListItem>\n        <ListItem> Demographics </ListItem></>\n}\n\n    <ListItem> Immunisation </ListItem>\n    <ListItem> Allergies </ListItem>\n    <ListItem> Past medical history </ListItem>\n    <ListItem> Family history </ListItem>\n    <ListItem> Social history </ListItem>\n    <ListItem> HPI / Problem List </ListItem>\n    <ListItem> Procedures </ListItem>\n    <ListItem> Assessment </ListItem>\n</List>\n\nexport default SideBar","import React from \"react\"\nimport '@material/slider/dist/mdc.slider.css';\nimport { Slider } from '@rmwc/slider';\nimport '@material/typography/dist/mdc.typography.css';\nimport { Typography } from '@rmwc/typography';\nimport '@material/textfield/dist/mdc.textfield.css';\nimport '@material/floating-label/dist/mdc.floating-label.css';\nimport '@material/notched-outline/dist/mdc.notched-outline.css';\nimport '@material/line-ripple/dist/mdc.line-ripple.css';\nimport { TextField } from '@rmwc/textfield';\n\nconst NurseContent = ({ vitals, setVitals }) => <div className=\"NurseContent\">\n\n    <div className=\"Measurements\">\n        <>\n            <Typography use=\"headline4\">Height: {vitals.height}cm</Typography>\n            <Slider\n                value={vitals.height === null ? 160 : vitals.height}\n                onChange={evt => setVitals({ ...vitals, height: evt.detail.value })}\n                onInput={evt => setVitals({ ...vitals, height: evt.detail.value })}\n                discrete\n                step={1}\n                min={10}\n                max={250}\n            />\n        </>\n        <div className=\"Break\" />\n\n        <>\n            <Typography use=\"headline4\">Weight: {vitals.weight}kg</Typography>\n            <Slider\n                value={vitals.weight === null ? 60 : vitals.weight}\n                onChange={evt => setVitals({ ...vitals, weight: evt.detail.value.toFixed(1) })}\n                onInput={evt => setVitals({ ...vitals, weight: evt.detail.value.toFixed(1) })}\n                discrete\n                step={0.1}\n                min={3}\n                max={150}\n            />\n        </>\n        <div className=\"Break\" />\n        <>\n            <Typography use=\"headline4\">Blood pressure</Typography>\n            <div className=\"BloodPressure\">\n                <TextField outlined label=\"systolic\" />\n                <TextField outlined label=\"diastolic\" />\n            </div>\n        </>\n        <div className=\"Break\" />\n        <>\n            <Typography use=\"headline4\">Heart rate: {vitals.heartRate}bpm</Typography>\n            <Slider\n                value={vitals.heartRate === null ? 80 : vitals.heartRate}\n                onChange={evt => setVitals({ ...vitals, heartRate: evt.detail.value })}\n                onInput={evt => setVitals({ ...vitals, heartRate: evt.detail.value })}\n                discrete\n                step={1}\n                min={30}\n                max={250}\n            />\n        </>\n\n    </div>\n</div>\n\nexport default NurseContent","import React from \"react\"\nimport '@material/slider/dist/mdc.slider.css';\nimport { Slider } from '@rmwc/slider';\nimport '@material/typography/dist/mdc.typography.css';\nimport { Typography } from '@rmwc/typography';\nimport '@material/textfield/dist/mdc.textfield.css';\nimport '@material/floating-label/dist/mdc.floating-label.css';\nimport '@material/notched-outline/dist/mdc.notched-outline.css';\nimport '@material/line-ripple/dist/mdc.line-ripple.css';\nimport { TextField } from '@rmwc/textfield';\n\nconst DoctorContent = ({ vitals }) => <div className=\"DoctorContent\">\n\n    <div className=\"Doctor\">\n        <div className=\"Break\" />\n        <>\n            <Typography use=\"headline4\">Patient history</Typography>\n            <TextField outlined textarea label=\"Patient history\" />\n        </>\n        <div className=\"Break\" />\n        <>\n            <Typography use=\"headline4\">Care plan</Typography>\n            <TextField outlined textarea label=\"Care plan\" />\n        </>\n        <div className=\"Break\" />\n        <>\n            <Typography use=\"headline4\">Medications</Typography>\n            <TextField outlined textarea label=\"Medications\" />\n        </>\n\n    </div>\n</div>\n\nexport default DoctorContent","import React from \"react\"\nimport { SimpleDialog } from '@rmwc/dialog';\nimport { Button } from '@rmwc/button';\nimport '@material/dialog/dist/mdc.dialog.css';\nimport '@material/button/dist/mdc.button.css';\n\nconst AlertDialog = ({ showAlertDialog, closeDialog }) => <SimpleDialog\n    title=\"Diabetes alert\"\n    body={<div className=\"AlertDialog\">\n        <b>This patient is likely to have diabetes because of the following factors</b>\n        <div>- High BMI </div>\n        <div>- Age > 60</div>\n        <div>- High systolic blood pressure</div>\n    </div>}\n    open={showAlertDialog}\n    onClose={closeDialog}\n/>\n\nexport default AlertDialog","import React from \"react\"\nimport { SimpleDialog } from '@rmwc/dialog';\nimport { Button } from '@rmwc/button';\nimport '@material/dialog/dist/mdc.dialog.css';\nimport '@material/button/dist/mdc.button.css';\n\nimport { Select } from '@rmwc/select';\nimport '@material/select/dist/mdc.select.css';\nimport '@material/floating-label/dist/mdc.floating-label.css';\nimport '@material/notched-outline/dist/mdc.notched-outline.css';\nimport '@material/line-ripple/dist/mdc.line-ripple.css';\n\nconst SettingsBody = ({ alertLevels, setAlertLevels }) => <div className=\"AlertDialog\">\n    <div>Best practices alert level</div>\n    <Select\n        label=\"\"\n        value={alertLevels.bestPractices}\n        options={['High', 'Medium', 'Low', \"None\"]}\n        onChange={evt => setAlertLevels({ ...alertLevels, bestPractices: evt.target.value })}\n    />\n    <div>Bleeding risk alert level</div>\n    <Select\n        label=\"\"\n        value={alertLevels.bleedingRisk}\n        options={['High', 'Medium', 'Low', \"None\"]}\n        onChange={evt => setAlertLevels({ ...alertLevels, bleedingRisk: evt.target.value })}\n    />\n\n    <div>Diabetes risk alert level</div>\n    <Select\n        label=\"\"\n        value={alertLevels.diabetesRisk}\n        options={['High', 'Medium', 'Low', \"None\"]}\n        onChange={evt => setAlertLevels({ ...alertLevels, diabetesRisk: evt.target.value })}\n    />\n</div>\n\nconst SettingsDialog = ({ showSettingsPage, closeDialog, alertLevels, setAlertLevels }) => <SimpleDialog\n    title=\"Alert Settings\"\n    body={<SettingsBody alertLevels={alertLevels} setAlertLevels={setAlertLevels} />}\n    open={showSettingsPage}\n    onClose={closeDialog}\n/>\n\nexport default SettingsDialog","import React, { Component } from 'react';\nimport './App.css';\nimport PatientDetails from \"./PatientDetails\"\nimport Buttons from \"./Buttons\"\nimport SideBar from \"./SideBar\"\nimport classnames from \"classnames\"\nimport NurseContent from \"./NurseContent\"\nimport DoctorContent from \"./DoctorContent\"\nimport AlertDialog from \"./AlertDialog\"\nimport SettingsDialog from \"./SettingsDialog\"\n\nclass App extends Component {\n\n  state = {\n    view: \"nurse\",\n    showSettingsPage: false,\n    seeingPatient: false,\n    showAlertDialog: false,\n    alertLevels: {\n      bestPractices: \"Low\",\n      bleedingRisk: \"Medium\",\n      diabetesRisk: \"High\"\n    },\n    patientData: {\n      name: \"Richard Tan\",\n      gender: \"Male\",\n      dob: \"20-9-1956\",\n      age: 63,\n      allergies: [\"G6PD\", \"nuts\"]\n    },\n    vitals: {\n      weight: null,\n      height: null,\n      bloodPressure: {},\n      heartRate: null,\n      generalObservations: null\n    }\n  }\n\n  setVitals = (vitals) => {\n    this.setState({ vitals })\n  }\n\n  switchPage = () => {\n    this.setState({\n      view: this.state.view == \"nurse\" ? \"doctor\" : \"nurse\"\n    })\n  }\n\n  toggleSettingsPage = () => {\n    this.setState({\n      showSettingsPage: this.state.showSettingsPage ? false : true\n    })\n  }\n\n  fetchRisk = async () => {\n\n    const parameters = {\n      age: this.state.patientData.age,\n      weight: this.state.vitals.weight,\n      height: this.state.vitals.height\n    }\n\n    console.log('https://is4250.herokuapp.com/predict?' + 'age=' + parameters.age + \"&height=\" + parameters.height / 100 + \"&weight=\" + parameters.weight)\n\n    const response = await fetch(\n      'https://is4250.herokuapp.com/predict?' + 'age=' + parameters.age + \"&height=\" + parameters.height / 100 + \"&weight=\" + parameters.weight,\n      {\n        mode: \"cors\", // no-cors, cors, *same-origin *=default\n      }\n    );\n    return response.text(); //extract JSON from the http response\n  }\n\n  seePatient = async () => {\n    const originally_seeing_patient = this.state.seeingPatient\n    this.setState({\n      seeingPatient: this.state.seeingPatient ? false : true\n    })\n    if (originally_seeing_patient) { return }\n\n    const probability = await this.fetchRisk()\n\n    if (probability > 0.15 && this.state.alertLevels.diabetesRisk == \"High\") {\n      this.setState({ showAlertDialog: true })\n    }\n    else if (probability > 0.25 && this.state.alertLevels.diabetesRisk == \"Medium\") {\n      this.setState({ showAlertDialog: true })\n    }\n    else if (probability > 0.4 && this.state.alertLevels.diabetesRisk == \"Low\") {\n      this.setState({ showAlertDialog: true })\n    }\n  }\n\n  render() {\n    const { view,\n      showSettingsPage,\n      showAlertDialog,\n      alertLevels,\n      seeingPatient,\n      patientData,\n      vitals } = this.state\n\n    return (\n      <div className=\"App\" >\n        <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></link>\n        <div className={classnames(\"Top-bar\", view)}>\n          <PatientDetails patientData={patientData} view={view} seeingPatient={seeingPatient} />\n          <Buttons view={view} switchPage={this.switchPage}\n            toggleSettingsPage={this.toggleSettingsPage}\n            toggleAlertDialog={this.seePatient} />\n        </div>\n        <div className=\"Body\">\n          <div className=\"Menu\">\n            <SideBar view={view} />\n          </div>\n          <div className=\"Content\">\n            {view === \"nurse\" ?\n              <NurseContent vitals={vitals} setVitals={this.setVitals} /> :\n              seeingPatient ? <DoctorContent vitals={vitals} /> : null\n            }\n          </div>\n        </div>\n        <AlertDialog\n          showAlertDialog={showAlertDialog}\n          closeDialog={evt => { this.setState({ showAlertDialog: false }) }} />\n        <SettingsDialog\n          showSettingsPage={showSettingsPage}\n          alertLevels={alertLevels}\n          setAlertLevels={newAlertLevels => { this.setState({ alertLevels: newAlertLevels }) }}\n          closeDialog={evt => { this.setState({ showSettingsPage: false }) }} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}